buildscript {
    repositories {
        gradlePluginPortal()
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:4.5.0'
    }
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

import com.bmuschko.gradle.docker.tasks.DockerInfo
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerTagImage

docker {
    registryCredentials {
        username = 'staleks'
        password = 'Saschko1012'
        email = 'staleks@gmail.com'
    }
}

ext {
    latestTag = "latest"
    versionTag = project.version
    buildImageName = "staleks/${rootProject.name}"
}

task dockerInfo(type: DockerInfo) {}

task buildImage(type: DockerBuildImage) {
    description = "Build docker image"
    inputDir = project.file(".")
    tags = ["${buildImageName}:${versionTag}".toString(),
            "${buildImageName}:${latestTag}".toString()]
}

task tagImage(type: DockerTagImage, dependsOn: buildImage) {
    force = true
    repository = buildImageName.toString()
    imageId = buildImage.getImageId()
    tag = versionTag.toString()
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    imageName = buildImageName.toString()
    tag = latestTag.toString()
}

task pushVersionedImage(type: DockerPushImage, dependsOn: tagImage) {
    imageName = buildImageName.toString()
    tag = versionTag.toString()
}
